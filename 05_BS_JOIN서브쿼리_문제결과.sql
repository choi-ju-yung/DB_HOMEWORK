-- 1번  70년대 생(1970~1979) 중 여자이면서 전씨인 사원의 이름과 주민번호, 부서 명, 직급 조회
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
    JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID 
    JOIN JOB USING(JOB_CODE)
WHERE SUBSTR(EMP_NO,1,2) BETWEEN 70 AND 79 AND
EMP_NAME LIKE '전%' AND SUBSTR(EMP_NO,8,1) IN(2,4);



-- 2번  나이 상 가장 막내의 사원 코드, 사원 명, 나이, 부서 명, 직급 명 조회
SELECT EMP_ID, EMP_NAME, 
EXTRACT(YEAR FROM SYSDATE) - TO_NUMBER(SUBSTR(EMP_NO,1,2))-
CASE   
    WHEN SUBSTR(EMP_NO,8,1) IN (1,2)  THEN 1900
    WHEN SUBSTR(EMP_NO,8,1) IN (3,4)  THEN 2000
    END
, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
    JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
    JOIN JOB USING(JOB_CODE)
WHERE SUBSTR(EMP_NO,1,2) = (SELECT MAX(SUBSTR(EMP_NO,1,2)) FROM EMPLOYEE);



-- 3번  이름에 ‘형’이 들어가는 사원의 사원 코드, 사원 명, 직급 조회
SELECT EMP_ID, EMP_NAME, JOB_NAME
FROM EMPLOYEE
    JOIN JOB USING(JOB_CODE)
WHERE EMP_NAME LIKE '%형%';


-- 4번 부서코드가 D5이거나 D6인 사원의 사원 명, 직급 명, 부서 코드, 부서 명 조회
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
    JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
    JOIN JOB USING(JOB_CODE)
WHERE DEPT_CODE IN ('D5','D6');


-- 5번 보너스를 받는 사원의 사원 명, 부서 명, 지역 명 조회
SELECT EMP_NAME, BONUS, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
    JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
    JOIN LOCATION ON LOCATION_ID = LOCAL_CODE
WHERE BONUS IS NOT NULL;


-- 6번 (사원 명, 직급 명, 부서 명, 지역 명 조회)
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE
    JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
    JOIN JOB USING(JOB_CODE)
    JOIN LOCATION ON LOCATION_ID = LOCAL_CODE;


-- 7번 (한국이나 일본에서 근무 중인 사원의 사원 명, 부서 명, 지역 명, 국가 명 조회)
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME
FROM EMPLOYEE
    JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
    JOIN LOCATION ON LOCATION_ID = LOCAL_CODE
    JOIN NATIONAL USING(NATIONAL_CODE)
WHERE NATIONAL_NAME IN('한국','일본');


-- 8번 (한 사원과 같은 부서에서 일하는 사원의 이름 조회)
SELECT E1.EMP_NAME, E1.DEPT_CODE, E2.EMP_NAME
FROM EMPLOYEE E1
    JOIN EMPLOYEE E2 ON E1.DEPT_CODE = E2.DEPT_CODE
WHERE E1.EMP_NAME != E2.EMP_NAME;


-- 9번 (보너스가 없고 직급 코드가 J4이거나 J7인 사원의 이름, 직급 명, 급여 조회(NVL 이용))
SELECT EMP_NAME, JOB_NAME, NVL(BONUS, SALARY)
FROM EMPLOYEE
    JOIN JOB USING(JOB_CODE)
WHERE JOB_CODE IN('J4','J7');


-- 10번 (보너스 포함한 연봉이 높은 5명의 사번, 이름, 부서 명, 직급, 입사일, 순위 조회_
SELECT *
    FROM(SELECT EMP_ID, EMP_NAME, DEPT_TITLE, JOB_NAME, HIRE_DATE,
            RANK() OVER(ORDER BY SALARY*12*(1+NVL(BONUS,0)) DESC) AS NUM
                FROM EMPLOYEE
                JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
                JOIN JOB USING(JOB_CODE)
        )
WHERE NUM < 6;
        



-- 11. 부서 별 급여 합계가 전체 급여 총 합의 20%보다 많은 부서의 부서 명, 부서 별 급여 합계 조회
-- 11-1. JOIN과 HAVING 사용
-- 11-2. 인라인 뷰 사용
-- 11-3. WITH 사용

WITH EXAMPLE  AS
(
    SELECT E.SALARY, D.DEPT_TITLE, (SELECT SUM(SALARY) FROM EMPLOYEE )AS SL
    FROM EMPLOYEE E 
     JOIN DEPARTMENT D ON DEPT_ID = E. DEPT_CODE
)

SELECT DEPT_TITLE, SUM(SALARY) FROM EXAMPLE
GROUP BY DEPT_TITLE, SL
HAVING SUM(SALARY) > SL*0.2;



SELECT * 
FROM ( 
        SELECT DEPT_TITLE, SUM(SALARY)
        FROM EMPLOYEE 
        JOIN DEPARTMENT ON DEPT_ID = DEPT_CODE;
        



-- 12번 부서 명과 부서 별 급여 합계 조회

SELECT DEPT_TITLE, SUM(SALARY)
FROM EMPLOYEE 
    JOIN DEPARTMENT ON DEPT_ID = DEPT_CODE
GROUP BY DEPT_TITLE;



    
        


