
-- 1번  (계열정보를 저장할 카테고리 테이블)
CREATE TABLE TB_CATEGORY(
        NAME VARCHAR(10),
        USE_YN CHAR(1) DEFAULT 'Y'
);


-- 2번 (과목 구분을 저장할 테이블)
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);


-- 3번 (TB_CATEGORY 테이블의 NAME 컬럼에 PRIMARY KEY 생성)
ALTER TABLE TB_CATEGORY ADD CONSTRAINT CATE_PK_NAME PRIMARY KEY(NAME);


-- 4번 (TB_CLASS_TYPE 테이블의 NAME컬럼에 NULL값이 들어가지 않도록 속성 변경)
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;


-- 5번 ( 두 테이블에서 컬럼명이 NO인 것은 기존 타입을 유지하면서 크기는 10으로, 컬럼명이 NAME 인 것은 마찬가지로 기존타입 유지하면서 크기 20으로 변경)
ALTER TABLE TB_CLASS_TYPE MODIFY NO VARCHAR2(10); 
ALTER TABLE TB_CLASS_TYPE MODIFY NAME VARCHAR2(20);
ALTER TABLE TB_CATEGORY MODIFY NAME VARCHAR2(20);


-- 6번 (두 테이블의 NO 컬럼과 NAME 컬럼의 이름을 각 각 TB_ 를 제외한 테이블 이름이 앞에 붙은 형태로 변경한다)
ALTER TABLE TB_CATEGORYE RENAME COLUMN NAME TO CATEGORY_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NAME TO CLASS_TYPE_NAME;
ALTER TABLE TB_CLASS_TYPE RENAME COLUMN NO TO CLASS_TYPE_NO;


-- 7번 (TB_CATEGORY 테이블과 TB_CLASS_TYPE 테이블의 PRIMARY KEY 이름을 다음과 같이 변경) -> PK_ + 컬럼이름
ALTER TABLE TB_CATEGORY RENAME CONSTRAINT CATE_PK_NAME TO PK_CATEGORY_NO;
ALTER TABLE TB_CLASS_TYPE RENAME CONSTRAINT SYS_C008325 TO PK_CLASS_TYPE_NO;


-- 8번
INSERT INTO TB_CATEGORY VALUES ('공학','Y');
INSERT INTO TB_CATEGORY VALUES ('자연과학','Y');
INSERT INTO TB_CATEGORY VALUES ('의학','Y');
INSERT INTO TB_CATEGORY VALUES ('예체능','Y');
INSERT INTO TB_CATEGORY VALUES ('인문사회','Y');
COMMIT;


-- 9번
-- TB_DEPARTMENT의 CATEGORY 컬럼이 TB_CATEGORY 테이블의 CATEGORY_NAME 컬럼을 부모값으로 참조하도록 FOREIGN KEY 지정
-- KEY이름은 FK_테이블이름_컬럼이름 으로 지정
ALTER TABLE TB_DEPARTMENT ADD CONSTRAINT FK_DEPARTMENT_NAME
FOREIGN KEY (CATEGORY) REFERENCES TB_CATEGORY(NAME);

SELECT * FROM TB_CATEGORY
JOIN TB_DEPARTMENT ON CATEGORY = NAME;


-- 10번
GRANT CREATE VIEW TO choi;

CREATE OR REPLACE VIEW VW_학생일반정보
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT;

-- 11번
CREATE OR REPLACE VIEW VW_지도면담(학생이름,학과이름,지도교수이름)
AS SELECT STUDENT_NAME, DEPARTMENT_NAME ,NVL(PROFESSOR_NAME,'지도교수없음')
FROM TB_STUDENT T
    LEFT OUTER JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
    LEFT OUTER JOIN TB_PROFESSOR ON COACH_PROFESSOR_NO = PROFESSOR_NO
ORDER BY 2;


-- 12번
CREATE OR REPLACE VIEW VW_학과별학생수(DEPARTMENT_NAME,STUDENT_COUNT)
AS SELECT DEPARTMENT_NAME, COUNT(*)
FROM TB_STUDENT
    JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
GROUP BY DEPARTMENT_NAME;


-- 13번
UPDATE VW_학생일반정보 SET STUDENT_NAME = '최주영'
WHERE STUDENT_NO = 'A213046';

-- 14번
CREATE OR REPLACE VIEW VW_학생일반정보
AS SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT WITH READ ONLY;

-- 15번
SELECT * FROM TB_CATEGORY;
SELECT * FROM TB_CLASS_TYPE;
SELECT * FROM TB_DEPARTMENT;
SELECT * FROM TB_STUDENT;
SELECT * FROM TB_PROFESSOR;
SELECT * FROM TB_CLASS;
SELECT * FROM TB_GRADE;

SELECT T.* FROM
   (SELECT CLASS_NO, CLASS_NAME, COUNT(*) AS "CNT"
    FROM TB_GRADE
    JOIN TB_CLASS USING(CLASS_NO)
    WHERE SUBSTR(TERM_NO,1,4) IN('2009','2008','2007','2006','2005') 
    GROUP BY CLASS_NO, CLASS_NAME
    ORDER BY 3 DESC)T
WHERE ROWNUM <4;
